When would you want to use a remote repository rather than keeping all your work 
local?

  A good time for this is if I may be working on something from multiple 
  computers. In that case, I can access the files from any one of these 
  computers. Another time would be if you would like to have an external backup 
  of the project. Pushing with Git to a remote repository makes that all really 
  easy. With something like Github, it's also free. If something happens to your 
  computer, you can still get to the project from another one.


Why might you want to always pull changes manually rather than having Git 
automatically stay up-to-date with your remote repository?

  Someone else might have made edits while I was working on mine. In that, it's 
  probably no different than not wanting to automerge the master branch 
  constantly when working on a different branch. Sure, it would keep the branch 
  up-to-date, but it might mess up what you're doing. If there are conflicts, 
  it will make you try to fix it, which might just be annoying to do at the 
  time. So, just like we commit manually, pulling manually seems to work out for 
  the best as well.
  
  
Describe the differences between forks, clones, and branches. When would you 
use one instead of another?

  Branches are a split off of your main version of your project. They are 
  helpful when you want to make different versions of your project or just want 
  to test some things without messing up the main version.
  
  Clones are useful when you want to copy a repository. Maybe you just want to 
  make a copy of one you have to another computer, or maybe you want to copy a 
  friend's.
  
  Forks are special GitHub clones that have some extra features. First, the 
  project you originally forked from is listed on your project. This gives them 
  credit in that it's based on their work. This also makes it easier to clone 
  someone's repository and set it up on GitHub. First, it is automatically setup 
  on GitHub already. Then when you clone it to your computer, the remote is all 
  setup.


What is the benefit of having a copy of the last known state of the remote 
stored locally?

  You can work on the project offline and see how far you're progressing from 
  when you last left the remote repository. You can also merge them on your own 
  time, should your work be divergent from the remote version and then fix those 
  conflicts.

  
How would you collaborate without using Git or GitHub? What would be easier, and 
what would be harder?

  Similar things to Git and GitHub might give a rather similar experience, but 
  ignoring those, it would be rather difficult to collaberate in comparison. You 
  could work with zipped folders through things like DropBox or email. It might 
  be easier in the sense that those options would be very GUI-y, though with 
  GitHub, you also have a GUI way to work with things, at least for the most 
  part. Using Git and GitHub is just a very good option.


When would you want to make changes in a separate branch rather than directly in 
master? What benefits does each approach have?

  If you want to make a change that deviates from the original function of the 
  project (like a different language version) or if you want to work on an 
  experimental feature, making a new branch might be a good idea. It's also a 
  good idea if you are working in a group to work in different branches. In this 
  way, the changes can be approved by everyone before moving it into the master 
  branch.
  
  If you just want to work linearly, and especially if you're working alone, 
  then just making changes directly in master might be a good idea.
